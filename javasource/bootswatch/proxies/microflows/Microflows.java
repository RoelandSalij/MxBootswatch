// This file was generated by Mendix Business Modeler 5.0.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package bootswatch.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the Microflows for the Bootswatch module

	public static String cAL_DeviceURL(IContext context, bootswatch.proxies.Theme _theme)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("Theme", _theme == null ? null : _theme.getMendixObject());
			return (String)Core.execute(context, "Bootswatch.CAL_DeviceURL", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static bootswatch.proxies.FormInput gET_Entity(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Bootswatch.GET_Entity", params);
			return result == null ? null : bootswatch.proxies.FormInput.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static bootswatch.proxies.Progress gET_ProgressBar(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Bootswatch.GET_ProgressBar", params);
			return result == null ? null : bootswatch.proxies.Progress.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void iVK_DoNothing(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			Core.execute(context, "Bootswatch.IVK_DoNothing", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void iVK_Download_Theme(IContext context, bootswatch.proxies.Theme _theme)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("Theme", _theme == null ? null : _theme.getMendixObject());
			Core.execute(context, "Bootswatch.IVK_Download_Theme", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void iVK_OpenThemes(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			Core.execute(context, "Bootswatch.IVK_OpenThemes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void iVK_OpenThemes_Mobile(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			Core.execute(context, "Bootswatch.IVK_OpenThemes_Mobile", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void microflow_Error(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			Core.execute(context, "Bootswatch.Microflow_Error", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void microflow_Information(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			Core.execute(context, "Bootswatch.Microflow_Information", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void microflow_Warning(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			Core.execute(context, "Bootswatch.Microflow_Warning", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void openHomepage(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			Core.execute(context, "Bootswatch.OpenHomepage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}