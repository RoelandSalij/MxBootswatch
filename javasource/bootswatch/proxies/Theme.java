// This file was generated by Mendix Business Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package bootswatch.proxies;

import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixIdentifier;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * 
 */
public class Theme extends system.proxies.Image
{
	/**
	 * Internal name of this entity
	 */
	public static final String entityName = "Bootswatch.Theme";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		PreviewUrl("PreviewUrl"),
		ThemeName("ThemeName"),
		TagLine("TagLine"),
		DevicePreview("DevicePreview");

		private String metaName;

		MemberNames(String s)
		{
			metaName = s;
		}

		@Override
		public String toString()
		{
			return metaName;
		}
	}

	public Theme(IContext context)
	{
		this(context, Core.instantiate(context, "Bootswatch.Theme"));
	}

	protected Theme(IContext context, IMendixObject themeMendixObject)
	{
		super(context, themeMendixObject);
		if (!Core.isSubClassOf("Bootswatch.Theme", themeMendixObject.getType()))
			throw new IllegalArgumentException("The given object is not a Bootswatch.Theme");
	}

	/**
	 * @deprecated Use 'new Theme(Context)' instead. Note that the constructor will not insert the new object in the database.
	 */
	@Deprecated
	public static bootswatch.proxies.Theme create(IContext context) throws CoreException
	{
		IMendixObject mendixObject = Core.create(context, "Bootswatch.Theme");
		return new bootswatch.proxies.Theme(context, mendixObject);
	}

	/**
	 * @deprecated Use 'Theme.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static bootswatch.proxies.Theme initialize(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		return bootswatch.proxies.Theme.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static bootswatch.proxies.Theme initialize(IContext context, IMendixObject mendixObject)
	{
		return new bootswatch.proxies.Theme(context, mendixObject);
	}

	public static bootswatch.proxies.Theme load(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		IMendixObject mendixObject = Core.retrieveId(context, mendixIdentifier);
		return bootswatch.proxies.Theme.initialize(context, mendixObject);
	}

	public static java.util.List<bootswatch.proxies.Theme> load(IContext context, String xpathConstraint) throws CoreException
	{
		java.util.List<bootswatch.proxies.Theme> result = new java.util.ArrayList<bootswatch.proxies.Theme>();
		for (IMendixObject obj : Core.retrieveXPathQuery(context, "//Bootswatch.Theme" + xpathConstraint))
			result.add(bootswatch.proxies.Theme.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of PreviewUrl
	 */
	public final String getPreviewUrl()
	{
		return getPreviewUrl(getContext());
	}

	/**
	 * @param context
	 * @return value of PreviewUrl
	 */
	public final String getPreviewUrl(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.PreviewUrl.toString());
	}

	/**
	 * Set value of PreviewUrl
	 * @param previewurl
	 */
	public final void setPreviewUrl(String previewurl)
	{
		setPreviewUrl(getContext(), previewurl);
	}

	/**
	 * Set value of PreviewUrl
	 * @param context
	 * @param previewurl
	 */
	public final void setPreviewUrl(IContext context, String previewurl)
	{
		getMendixObject().setValue(context, MemberNames.PreviewUrl.toString(), previewurl);
	}

	/**
	 * @return value of ThemeName
	 */
	public final String getThemeName()
	{
		return getThemeName(getContext());
	}

	/**
	 * @param context
	 * @return value of ThemeName
	 */
	public final String getThemeName(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.ThemeName.toString());
	}

	/**
	 * Set value of ThemeName
	 * @param themename
	 */
	public final void setThemeName(String themename)
	{
		setThemeName(getContext(), themename);
	}

	/**
	 * Set value of ThemeName
	 * @param context
	 * @param themename
	 */
	public final void setThemeName(IContext context, String themename)
	{
		getMendixObject().setValue(context, MemberNames.ThemeName.toString(), themename);
	}

	/**
	 * @return value of TagLine
	 */
	public final String getTagLine()
	{
		return getTagLine(getContext());
	}

	/**
	 * @param context
	 * @return value of TagLine
	 */
	public final String getTagLine(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.TagLine.toString());
	}

	/**
	 * Set value of TagLine
	 * @param tagline
	 */
	public final void setTagLine(String tagline)
	{
		setTagLine(getContext(), tagline);
	}

	/**
	 * Set value of TagLine
	 * @param context
	 * @param tagline
	 */
	public final void setTagLine(IContext context, String tagline)
	{
		getMendixObject().setValue(context, MemberNames.TagLine.toString(), tagline);
	}

	/**
	 * @return value of DevicePreview
	 */
	public final String getDevicePreview()
	{
		return getDevicePreview(getContext());
	}

	/**
	 * @param context
	 * @return value of DevicePreview
	 */
	public final String getDevicePreview(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.DevicePreview.toString());
	}

	/**
	 * Set value of DevicePreview
	 * @param devicepreview
	 */
	public final void setDevicePreview(String devicepreview)
	{
		setDevicePreview(getContext(), devicepreview);
	}

	/**
	 * Set value of DevicePreview
	 * @param context
	 * @param devicepreview
	 */
	public final void setDevicePreview(IContext context, String devicepreview)
	{
		getMendixObject().setValue(context, MemberNames.DevicePreview.toString(), devicepreview);
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final bootswatch.proxies.Theme that = (bootswatch.proxies.Theme) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static String getType()
	{
		return "Bootswatch.Theme";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
